<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cursor_arifle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>dontdeactivate</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_set_cursor(cr_none);

owner = undefined;

default_cursor = spr_cursor_arifle;
image_index=2
radius=20
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=mouse_x
y=mouse_y
image_speed=0

sprite_index = default_cursor;

if (owner != undefined and instance_exists(owner)) {

    // get correct reticule for weapon equipped by owner
    var curWeap = owner.weapons[| owner.weapons_index];
    if (curWeap != undefined and instance_exists(curWeap)) {
        if (curWeap.targeting_spr != undefined) {
            sprite_index = curWeap.targeting_spr;
        }
    }

    var target;
    var entities = collision_circle_list(x, y, radius, entity_par_obj, true, true);
    
    if (entities != noone) {
        for (var i = 0; i &lt; ds_list_size(entities); i++) {
            if (entities[| i].team == owner.team) {
                image_index = 1;
                target = undefined;
                break;
            } else if (entities[| i].team != 0 and entities[| i].team != owner.team) {
                image_index = 0;
                target = entities[| i];
                break;
            } else {
                image_index = 2;
                target = undefined;
            }
        }
    } else {
        image_index = 2;
        target = undefined;
    }
}

if (instance_exists(level_control_par)) {
    if (level_control_par.paused) {
        sprite_index = spr_cursor_normal;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

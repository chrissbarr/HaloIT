<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mc_pistol_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>human_par</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

weapons_max = 2;

var w = instance_create(x, y, obj_weap_arifle);
weapon_pickup(w);

var w = instance_create(x, y, obj_weap_pistol);
weapon_pickup(w);

if (audio_is_playing(menu_sound)) {
    audio_stop_sound(menu_sound);
}

if (audio_is_playing(shield_beep_snd)) {
    audio_stop_sound(shield_beep_snd)
}

can_grenade=false
grenade='frag'
frag_grenades=40
godmode=false

// movement
speed_fwd_wlk = room_speed * 0.1;
speed_fwd_run = room_speed * 0.18;
speed_rev_max = room_speed * 0.07;

global.enemyspeed=1.75
friction=0.3
dec=1

hurt=1.2

recharge=true

laser = 0;
laseron = false;

// camoflage
camoflage = false;
camo_time_remain = 0;
camo_time_max = room_speed * 30;
camo_alpha = 0.30;
camo_fade_rate = 0.01;
camo_rise_rate = 0.03;

overshield = false;

instance_create(x,y,health_obj)

MJOLNIR = global.mjolnir;
if MJOLNIR == 1 {
shield_max=100
hp_max=100
}
if MJOLNIR == 2 {
shield_max=150
hp_max=125
}
if MJOLNIR == 3 {
shield_max=175
hp_max=150
}
if MJOLNIR == 4 {
shield_max=200
hp_max=175
}

RECHARGE = global.recharge;
if RECHARGE == 1 {
shield_regen_rate = 1.0;
shield_regen_delay = room_speed*3;
}
if RECHARGE == 2 {
shield_regen_rate = 1.5;
shield_regen_delay = room_speed*2;
}
if RECHARGE == 3 {
shield_regen_rate = 2.0;
shield_regen_delay = room_speed*1;
}

LASERSIGHT = global.lasersight

if LASERSIGHT == 1
    laser=true
else
    laser=false

cursor = instance_create(x,y,obj_cursor);
cursor.owner = id;

shield_regen_start_sound = recharge_snd;
shield_regen_critical_sound = shield_beep_snd;
shield_regen_critical_ratio = 0.5;

audio_listener_orientation(0,1,0,0,0,1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = direction;

var speed_max;

if keyboard_check(vk_shift){
    speed_max = speed_fwd_run;
} else {
    speed_max = speed_fwd_wlk;
}

speed = clamp(speed, -speed_rev_max, speed_max);

direction=point_direction(x,y,cursor.x,cursor.y)

switch (weapons[| weapons_index].object_index) {
    case obj_weap_arifle:
        sprite_index = mc_arifle_spr;
        fireX = 33;
        fireY = 17;
        break;
    case obj_weap_brifle:
        sprite_index = mc_battle_rifle_spr;
        fireX = 31;
        fireY = 16;
        break;
    case obj_weap_shotgun:
        sprite_index = mc_shotgun_spr;
        fireX = 33;
        fireY = 16;
        break;
    case obj_weap_plasmarifle:
        sprite_index = mc_plasmarifle_spr;
        fireX = 26;
        fireY = 16;
        break;
    case obj_weap_plasmapistol:
        sprite_index = mc_plasmapistol_spr;
        fireX = 27;
        fireY = 19;
        break;
    case obj_weap_needler:
        sprite_index = mc_needler_spr;
        fireX = 25;
        fireY = 15;
        break;
    default:
    case obj_weap_pistol:
        sprite_index = mc_pistol_spr;
        fireX = 24;
        fireY = 16;
        break;
}

event_inherited();

if (shield &gt; 0) {
    image_index = 1;
} else {
    image_index = 0;
}

if (cursor != undefined and instance_exists(cursor)) {
    target = cursor.target;
}

var curWeap = weapons[| weapons_index];

if (curWeap.charges) {
    if (curWeap.can_shoot) {
        if (mouse_check_button_pressed(mb_left)) {
            camoflage = false;
            with curWeap { event_perform(ev_other, ev_user2); }
        }
        
        if (mouse_check_button_released(mb_left)) {
            camoflage = false;
            with curWeap { event_perform(ev_other, ev_user0); }
        }
    }
} else {
    if (mouse_check_button(mb_left)) {
        if (curWeap.can_shoot) {
            camo_time_remain = 0;
            with curWeap { event_perform(ev_other, ev_user0); }
        } else {
            if (curWeap.needs_reloading and !curWeap.reloading) {
                with curWeap { event_perform(ev_other, ev_user1); }
            }
        }
    }
}

global.control = '';

var nearbyWeapons = collision_circle_list(x, y, 20, obj_weap_par, false, true);

if (nearbyWeapons != noone) {    
    for(var i = 0; i &lt; ds_list_size(nearbyWeapons); i++) {
        var wep = nearbyWeapons[| i];
        if (wep.owner == undefined) {
           
            var alreadyCarrying = check_carrying_weapon(wep.object_index);
            
            if (alreadyCarrying != -1) {
                if (wep.ammo_transferable) {
                    if (wep.ammo_current &gt; 0) {
                        var ammo_needed = weapons[| alreadyCarrying].ammo_maximum - weapons[| alreadyCarrying].ammo_current;
                        
                        if (ammo_needed &gt; wep.ammo_current) {
                            ammo_needed = wep.ammo_current;
                        }
                        
                        wep.ammo_current -= ammo_needed;
                        weapons[| alreadyCarrying].ammo_current += ammo_needed;
                    }
                    if (wep.magazine_current &gt; 0) {
                        var ammo_needed = weapons[| alreadyCarrying].ammo_maximum - weapons[| alreadyCarrying].ammo_current;
                        
                        if (ammo_needed &gt; wep.magazine_current) {
                            ammo_needed = wep.magazine_current;
                        }
                        
                        wep.magazine_current -= ammo_needed;
                        weapons[| alreadyCarrying].ammo_current += ammo_needed;
                    }
                }
            }
            
            if (alreadyCarrying == -1 or (alreadyCarrying == weapons_index and wep.ammo_transferable == false and (wep.ammo_current &gt; weapons[| alreadyCarrying].ammo_current or wep.magazine_current &gt; weapons[| alreadyCarrying].magazine_current))) {
                global.control = 'Press E to pick up ' + wep.name;
                
                if (keyboard_check_pressed(ord('E'))) {
                    weapon_drop(weapons[| weapons_index]);
                    weapon_pickup(wep);
                }
                break;
            }
        }
    }
    
    ds_list_destroy(nearbyWeapons);
}

var nearbyAmmo = collision_circle_list(x, y, 20, obj_ammo_par, false, true);

if (nearbyAmmo != noone) {
    for(var i = 0; i &lt; ds_list_size(nearbyAmmo); i++) {
        var ammo = nearbyAmmo[| i];
        var carryingWeaponToSuit = check_carrying_weapon(ammo.ammo_for_weapon);
        
        if (carryingWeaponToSuit != -1) {
            var ammo_needed = weapons[| carryingWeaponToSuit].ammo_maximum - weapons[| carryingWeaponToSuit].ammo_current;
                    
            if (ammo_needed &gt; ammo.ammo_amount) {
                ammo_needed = ammo.ammo_amount;
            }
            
            ammo.ammo_amount -= ammo_needed;
            weapons[| carryingWeaponToSuit].ammo_current += ammo_needed;
        }
    }
    ds_list_destroy(nearbyAmmo);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// camoflage
if (camo_time_remain &gt; 0) {
    camo_time_remain -= 1;
    camoflage = true;
} else {
    camoflage = false;
}

if (camoflage) {
    if (image_alpha &gt; camo_alpha) {
        image_alpha -= camo_fade_rate;
    }
} else {
    if (image_alpha &lt; 1.0) {
        image_alpha += camo_rise_rate;
    }
}

// overshield
if (overshield) {
    if (shield &gt; shield_max) {
        shield -= .01;
    } else {
        overshield = false;
    }
}

audio_listener_position(x, y, 0);

if (instance_exists(tank_inactive_obj)) {
    if collision_circle(x, y, 30, tank_inactive_obj, true, true) {
        global.control = "Press V to enter Scorpion Tank";
    }
}

if (instance_exists(tank_obj)) {
    if (distance_to_object(instance_nearest(x, y, tank_obj)) &lt; 10) {
        can_shoot = false;
        alarm[0] = 2;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="human_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,solid_obj))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,solid_obj))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mc">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=xprevious
y=yprevious</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="shieldbashskull_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.advice='Press E to pick up Skull'
alarm[4]=room_speed*1/2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(ord('E')){
global.shieldskull = "1";
with other
    instance_destroy()
global.advice='You found the Black Eye Skull! You can use this skull next time you play arena mode!'
alarm[4]=room_speed*5
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="training_turret_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,solid_obj))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,solid_obj))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="damage_circle_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if shield&gt;1
shield-=other.shieldtake/4
else{
hp-=other.hptake/4
repeat other.hptake/4
instance_create(x,y,red_blood_drop_obj)
}
alarm[1]=recharge_speed</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="overshield_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!overshield) {
    shield = shield_max * 2;
    overshield = true;
    instance_destroy(other);
    
    // flash screen w/fade
    var effect = instance_create(x, y, obj_effect_flashfade);
    effect.flash_colour = c_purple;
    effect.flash_alpha = 0.6;
    effect.flash_decay = 0.04;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="camoflage_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (camo_time_remain &lt; camo_time_max / 2) {
    camo_time_remain = camo_time_max;
    instance_destroy(other);
    
    // flash screen w/fade
    var effect = instance_create(x, y, obj_effect_flashfade);
    effect.flash_colour = c_aqua;
    effect.flash_alpha = 1.0;
    effect.flash_decay = 0.08;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="healthpack_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hp &lt; hp_max) {
    hp = hp_max;
    instance_destroy(other);
    
    // flash screen w/fade
    var effect = instance_create(x, y, obj_effect_flashfade);
    effect.flash_colour = c_white;
    effect.flash_alpha = 1.0;
    effect.flash_decay = 0.08;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="fence_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,fence_par))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,fence_par))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="cliff_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,cliff_par))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,cliff_par))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="popup_target">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,solid_obj))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,solid_obj))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="solid_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,solid_obj))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,solid_obj))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="portable_shield_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,solid_obj))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,solid_obj))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="tree_scenery_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,tree_scenery_obj))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,tree_scenery_obj))
{ y += vspeed; exit;}
speed = 0;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="marine_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,marine_par))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,marine_par))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="covenant_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,covenant_par))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,covenant_par))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="flood_infection_form_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shield &gt; 1) {
    shield-=5*hurt;
    effect_create_above(ef_spark, other.x, other.y, 0, c_orange);
} else {
    hp-=10*hurt
    repeat random(5)
        a=instance_create(x,y,red_blood_drop_obj)
}

with (other) { instance_destroy(); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keycontrol = global.controls;
movement = global.movement;

if keycontrol == "WASD" {
    if movement == "0" {
        speed+=1
    }
    else
    {
        y-=ms-dec
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keycontrol = global.controls;
movement = global.movement;

if keycontrol == "WASD" {
    if movement == "0" {
        speed -= 0.6;
    }
    else
    {
        y += ms-dec;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keycontrol = global.controls;
movement = global.movement;

if keycontrol == "WASD" {
    if movement == "0" {
        x += lengthdir_x(1.5,image_angle+90);
        y += lengthdir_y(1.5,image_angle+90);
    }
    else
    {
        x+=ms-dec;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keycontrol = global.controls;
movement = global.movement;

if keycontrol == "WASD" {
    if movement == "0" {
        x += lengthdir_x(1.5,image_angle-90);
        y += lengthdir_y(1.5,image_angle-90);
    }
    else
    {
        x-=ms-dec;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keycontrol = global.controls;
movement = global.movement;

if keycontrol == "ARROW" {
    if movement == "0" {
        speed -= 0.6;
    }
    else
    {
        y += ms-dec;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keycontrol = global.controls;
movement = global.movement;

if keycontrol == "ARROW" {
    if movement == "0" {
        x += lengthdir_x(1.5,image_angle+90);
        y += lengthdir_y(1.5,image_angle+90);
    }
    else
    {
        x+=ms-dec;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keycontrol = global.controls;
movement = global.movement;

if keycontrol == "ARROW" {
    if movement == "0" {
        speed += 1;
    }
    else
    {
        y -= ms-dec;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keycontrol = global.controls;
movement = global.movement;

if keycontrol == "ARROW" {
    if movement == "0" {
        x += lengthdir_x(1.5,image_angle-90);
        y += lengthdir_y(1.5,image_angle-90);
    }
    else
    {
        x-=ms-dec;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if can_grenade=true
if grenade='frag'{
if frag_grenades&gt;0{
instance_create(x,y,frag_grenade_obj)
frag_grenades-=1
}
}

if (global.debug) {
    x = mouse_x;
    y = mouse_y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.drawblood {
    repeat (lastHitSize/2) {
        instance_create(lastHitX,lastHitY,red_blood_drop_obj)
    }
    
    // flash screen white w/fade
    var effect = instance_create(x, y, obj_effect_flashfade);
    effect.flash_colour = c_red;
    effect.flash_alpha = 0.3;
    effect.flash_decay = 0.1;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=xprevious
y=yprevious</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y,1,1,direction,c_white,image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var curWeap = weapons[| weapons_index];

with curWeap { event_perform(ev_other, ev_user1); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="80">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.debug = !global.debug;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>LOTUS = global.lotus;
if lotus&gt;0{
    instance_create(x,y,lotus_antitank_mine_obj)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var weapIndex = check_carrying_weapon(obj_weap_plasmarifle);

if (weapIndex != -1) {
    weapons_index = weapIndex;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="52">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var weapIndex = check_carrying_weapon(obj_weap_plasmapistol);

if (weapIndex != -1) {
    weapons_index = weapIndex;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var weapIndex = check_carrying_weapon(obj_weap_brifle);

if (weapIndex != -1) {
    weapons_index = weapIndex;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var weapIndex = check_carrying_weapon(obj_weap_arifle);

if (weapIndex != -1) {
    weapons_index = weapIndex;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var weapIndex = check_carrying_weapon(obj_weap_pistol);

if (weapIndex != -1) {
    weapons_index = weapIndex;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>new_index = weapons_index + 1;

if (new_index &gt;= ds_list_size(weapons)) {
    new_index = 0;
}

if (new_index != weapons_index) {
    oldWep = weapons[| weapons_index];
    with (oldWep) { event_perform(ev_other, ev_user3); }
    
    weapons_index = new_index;
    
    with (weapons[| weapons_index]) { event_perform(ev_other, ev_user4); }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

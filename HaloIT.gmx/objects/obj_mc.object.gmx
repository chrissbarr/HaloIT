<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mc_pistol_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>human_par</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

weapons_max = 2;

var w = instance_create(x, y, obj_weap_arifle);
weapon_pickup(w);

var w = instance_create(x, y, obj_weap_pistol);
weapon_pickup(w);

if audio_is_playing(menu_sound)
audio_stop_sound(menu_sound)
if audio_is_playing(shield_beep_snd)
audio_stop_sound(shield_beep_snd)
reloading=false
can_grenade=false
grenade='frag'
frag_grenades=40
godmode=false

ms=room_speed*.1
overload=0
view=0
plasmacanshoot=true
laser = 0;
mxp = mouse_x;
myp = mouse_y;
turn_speed=360/120
global.enemyspeed=1.75
friction=0.3
bullettype=obj_proj_pistol
dec=1

hurt=1.2

recharge=true
stealshields=false

try_optimise=false
draw=false
laseron=false
camoflage=false
camomaxtime=room_speed*30
overshield=false
flash=0
instance_create(x,y,health_obj)

MJOLNIR = global.mjolnir;
if MJOLNIR == 1 {
shield_max=100
hp_max=100
}
if MJOLNIR == 2 {
shield_max=150
hp_max=125
}
if MJOLNIR == 3 {
shield_max=175
hp_max=150
}
if MJOLNIR == 4 {
shield_max=200
hp_max=175
}

RECHARGE = global.recharge;
if RECHARGE == 1 {
shield_regen_rate = 1.0;
shield_regen_delay = room_speed*3;
}
if RECHARGE == 2 {
shield_regen_rate = 1.5;
shield_regen_delay = room_speed*2;
}
if RECHARGE == 3 {
shield_regen_rate = 2.0;
shield_regen_delay = room_speed*1;
}

LASERSIGHT = global.lasersight

if LASERSIGHT == 1
    laser=true
else
    laser=false

alarm[0]=5 // small delay before we can shoot to debounce mouse on level start
alarm[8]=1

cursor = instance_create(x,y,obj_cursor);
cursor.owner = id;

audio_listener_orientation(0,1,0,0,0,1);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if reloadbullet='pistol'{
if pistol_mag&lt;12{
need=12-pistol_mag
if pistolammo&gt;=need{
pistol_mag+=need
pistolammo-=need}
else{
pistol_mag+=pistolammo
pistolammo-=pistolammo
}
alarm[11]=round(room_speed*2/12)
reloading=false
}
else
reloading=false
exit
}

if reloadbullet='assault_rifle'{
if assaultrifle_mag&lt;60{
need=60-assaultrifle_mag
if assaultrifleammo&gt;=need{
assaultrifle_mag+=need
assaultrifleammo-=need}
else{
pistol_mag+=pistolammo
pistolammo-=pistolammo
}

alarm[11]=round(room_speed*2/60)
reloading=false
}
else
reloading=false
exit
}


if reloadbullet='battle_rifle'{
if battle_rifle_mag&lt;36{
need=36-battle_rifle_mag
if battle_rifle_ammo&gt;=need{
battle_rifle_mag+=need
battle_rifle_ammo-=need}
else{
battle_rifle_mag+=battle_rifle_ammo
battle_rifle_ammo-=battle_rifle_ammo
}
alarm[11]=round(room_speed*2/12)
reloading=false
}
else
reloading=false
exit
}

if reloadbullet='sniper_rifle'{
if sniper_rifle_mag&lt;36{
need=4-sniper_rifle_mag
if sniper_rifle_ammo&gt;=need{
sniper_rifle_mag+=need
sniper_rifle_ammo-=need}
else{
sniper_rifle_mag+=sniper_rifle_ammo
sniper_rifle_ammo-=sniper_rifle_ammo
}
alarm[11]=round(room_speed*2/12)
reloading=false
}
else
reloading=false
exit
}


if reloadbullet='needler'{
if needler_mag&lt;20{
need=20-needler_mag
if needler_ammo&gt;=need{
needler_mag+=need
needler_ammo-=need}
else{
needler_mag+=needler_ammo
needler_ammo-=needler_ammo
}
alarm[11]=round(room_speed*2/12)
}
else
reloading=false
exit
}


if reloadbullet='shotgun'
if reloading=true{
if shotgun_mag&lt;12{
need=1
if shotgun_ammo&gt;=need{
shotgun_mag+=need
shotgun_ammo-=need}
else{
shotgun_mag+=shotgun_ammo
shotgun_ammo-=shotgun_ammo
}
alarm[11]=room_speed*1/2
alarm[10]=room_speed*1/2-2
}
else
reloading=false
exit
}

reloading=false</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if reloadbullet='pistol'{
audio_play_sound(pistol_reload_snd, 0, false)
}


if reloadbullet='needler'{
audio_play_sound(pistol_reload_snd, 0, false)
}


if reloadbullet='assault_rifle'{
audio_play_sound(assault_rifle_reload_snd, 0, false)
}

if reloadbullet='battle_rifle'{
audio_play_sound(battle_rifle_reload_snd, 0, false)
}

if reloadbullet='sniper_rifle'{
audio_play_sound(battle_rifle_reload_snd, 0, false)
}

if reloadbullet='shotgun'
if reloading=true
if shotgun_mag&lt;12{
audio_play_sound(shotgun_reload_snd, 0, false)
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(shotgun_cock_snd, 0, false)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(varshoot1X,varshoot1Y,bullettype)
b-=1
if b&gt;0
alarm[6]=2
else
alarm[0]=reload</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>a=instance_create(x,y,create)
a.ammo=create_ammo
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.advice=''</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>camoflage=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>flash=0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle=direction

if speed&gt;ms
speed=ms

if speed&lt;-2
speed=-2

if hp&lt;1
instance_destroy()

if keyboard_check(vk_shift){
    movement = global.movement;
    if movement == "0" 
        ms=room_speed*.18
    else
        ms=room_speed*.15
}
else
ms=room_speed*.1

direction=point_direction(x,y,cursor.x,cursor.y)

if instance_exists(tank_obj){
if distance_to_object(instance_nearest(x,y,tank_obj))&lt;10{
can_shoot=false
alarm[0]=2}}


switch (weapons[| weapons_index].object_index) {
    case obj_weap_arifle:
        sprite_index = mc_arifle_spr;
        fireX = 33;
        fireY = 17;
        break;
    case obj_weap_brifle:
        sprite_index = mc_battle_rifle_spr;
        fireX = 31;
        fireY = 16;
        break;
    case obj_weap_shotgun:
        sprite_index = mc_shotgun_spr;
        fireX = 33;
        fireY = 16;
        break;
    case obj_weap_plasmarifle:
        sprite_index = mc_plasmarifle_spr;
        fireX = 26;
        fireY = 16;
        break;
    case obj_weap_plasmapistol:
        sprite_index = mc_plasmapistol_spr;
        fireX = 27;
        fireY = 19;
        break;
    case obj_weap_needler:
        sprite_index = mc_needler_spr;
        fireX = 25;
        fireY = 15;
        break;
    default:
    case obj_weap_pistol:
        sprite_index = mc_pistol_spr;
        fireX = 24;
        fireY = 16;
        break;
}

event_inherited();

if (shield &gt; 0) {
    image_index = 1;
} else {
    image_index = 0;
}

if (cursor != undefined and instance_exists(cursor)) {
    target = cursor.target;
}

var curWeap = weapons[| weapons_index];

if (curWeap.charges) {
    if (curWeap.can_shoot) {
        if (mouse_check_button_pressed(mb_left)) {
            with curWeap { event_perform(ev_other, ev_user2); }
        }
        
        if (mouse_check_button_released(mb_left)) {
            with curWeap { event_perform(ev_other, ev_user0); }
        }
    }
} else {
    if (mouse_check_button(mb_left)) {
        if (curWeap.can_shoot) {
            with curWeap { event_perform(ev_other, ev_user0); }
        } else {
            if (curWeap.needs_reloading and !curWeap.reloading) {
                with curWeap { event_perform(ev_other, ev_user1); }
            }
        }
    }
}

global.control = '';

var nearbyWeapons = collision_circle_list(x, y, 20, obj_weap_par, false, true);

if (nearbyWeapons != noone) {
    for(var i = 0; i &lt; ds_list_size(nearbyWeapons); i++) {
        var wep = nearbyWeapons[| i];
        if (wep.owner == undefined) {
            var alreadyCarrying = check_carrying_weapon(wep.object_index);
            
            if (alreadyCarrying != -1) {
                if (wep.ammo_transferable and wep.ammo_current &gt; 0) {
                    var ammo_needed = weapons[| alreadyCarrying].ammo_maximum - weapons[| alreadyCarrying].ammo_current;
                    
                    if (ammo_needed &gt; wep.ammo_current) {
                        ammo_needed = wep.ammo_current;
                    }
                    
                    wep.ammo_current -= ammo_needed;
                    weapons[| alreadyCarrying].ammo_current += ammo_needed;
                }
            }
            
            if (alreadyCarrying == -1 or (alreadyCarrying == weapons_index and wep.ammo_transferable == false and (wep.ammo_current &gt; weapons[| alreadyCarrying].ammo_current or wep.magazine_current &gt; weapons[| alreadyCarrying].magazine_current))) {
                global.control = 'Press E to pick up ' + wep.name;
                
                if (keyboard_check_pressed(ord('E'))) {
                    weapon_drop(weapons[| weapons_index]);
                    weapon_pickup(wep);
                    break;
                }
            }
        }
    }
    
    ds_list_destroy(nearbyWeapons);
}


var nearbyAmmo = collision_circle_list(x, y, 20, obj_ammo_par, false, true);

if (nearbyAmmo != noone) {
    for(var i = 0; i &lt; ds_list_size(nearbyAmmo); i++) {
        var ammo = nearbyAmmo[| i];
        var carryingWeaponToSuit = check_carrying_weapon(ammo.ammo_for_weapon);
        
        if (carryingWeaponToSuit != -1) {
            var ammo_needed = weapons[| carryingWeaponToSuit].ammo_maximum - weapons[| carryingWeaponToSuit].ammo_current;
                    
            if (ammo_needed &gt; ammo.ammo_amount) {
                ammo_needed = ammo.ammo_amount;
            }
            
            ammo.ammo_amount -= ammo_needed;
            weapons[| carryingWeaponToSuit].ammo_current += ammo_needed;
        }
    }
    ds_list_destroy(nearbyAmmo);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if camoflage=true
if image_alpha&gt;.3
image_alpha-=.01

if camoflage=false
if image_alpha&lt;1
image_alpha+=.03

if overshield=true{

if shield_max&gt;shieldrem
{
shield-=.01
}
else
{
shield_max=shieldrem
shield=shield_max
overshield=false
}

}

if overshield=true
if shield&lt;1{
overshield=false
shield_max=shieldrem
shield=shield_max
}

godmode_scr()

audio_listener_position(x, y, 0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(tank_inactive_obj){
if collision_circle(x,y,30,tank_inactive_obj,true,true){
global.advice="Press V to enter Scorpion Tank"
alarm[4]=room_speed/2
}}


if instance_exists(tree_obj){
neartree=instance_nearest(x,y,tree_obj)
neartree2=instance_nearest(x,y,tree_obj)
oldtree=neartree2
instance_deactivate_object(neartree2)
neartree2=instance_nearest(x,y,tree_obj)
instance_activate_object(oldtree)
if distance_to_object(neartree)&lt;100{
if distance_to_object(neartree2)&lt;100{
rantreething=round(random(10))
if rantreething=3{
volthing=random(10)/10
audio_sound_gain(bird1_snd, volthing, 0)
audio_play_sound(bird1_snd, 0, false)
}
}
}
}


if view=0{
if view_wport&gt;640
view_wport-=6
if view_hport&gt;480
view_hport-=6
}

if view=1{
if view_wport&lt;1280
view_wport+=6
if view_hport&lt;960
view_hport+=6
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="human_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,solid_obj))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,solid_obj))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mc">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=xprevious
y=yprevious</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="shieldbashskull_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.advice='Press E to pick up Skull'
alarm[4]=room_speed*1/2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(ord('E')){
global.shieldskull = "1";
with other
    instance_destroy()
global.advice='You found the Black Eye Skull! You can use this skull next time you play arena mode!'
alarm[4]=room_speed*5
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="training_turret_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,solid_obj))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,solid_obj))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="damage_circle_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if shield&gt;1
shield-=other.shieldtake/4
else{
hp-=other.hptake/4
repeat other.hptake/4
instance_create(x,y,red_blood_drop_obj)
}
alarm[1]=recharge_speed</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="overshield_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if overshield=false{
shieldrem=shield_max
shield_max=shieldrem+shieldrem/2
shield=shield_max
overshield=true
with other
instance_destroy()
alarm[1]=1
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="camoflage_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if camoflage=false{
camoflage=true
alarm[3]=camomaxtime
with other
instance_destroy()
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="healthpack_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hp&lt;hp_max{
hp=hp_max
if hp&gt;hp_max
hp=hp_max
with other
instance_destroy()
flash=1
alarm[2]=1}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="fence_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,fence_par))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,fence_par))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="cliff_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,cliff_par))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,cliff_par))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="popup_target">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,solid_obj))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,solid_obj))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="solid_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,solid_obj))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,solid_obj))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="portable_shield_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,solid_obj))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,solid_obj))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="tree_scenery_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,tree_scenery_obj))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,tree_scenery_obj))
{ y += vspeed; exit;}
speed = 0;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="marine_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,marine_par))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,marine_par))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="covenant_par">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
x = xprevious;
y = yprevious;
if (abs(hspeed) &gt;= abs(vspeed) &amp;&amp;
not place_meeting(x+hspeed,y,covenant_par))
{ x += hspeed; exit;}
if (abs(vspeed) &gt;= abs(hspeed) &amp;&amp;
not place_meeting(x,y+vspeed,covenant_par))
{ y += vspeed; exit;}
speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="flood_infection_form_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shield &gt; 1) {
    shield-=5*hurt;
    effect_create_above(ef_spark, other.x, other.y, 0, c_orange);
} else {
    hp-=10*hurt
    repeat random(5)
        a=instance_create(x,y,red_blood_drop_obj)
}

with (other) { instance_destroy(); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keycontrol = global.controls;
movement = global.movement;

if keycontrol == "WASD" {
    if movement == "0" {
        speed+=1
    }
    else
    {
        y-=ms-dec
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keycontrol = global.controls;
movement = global.movement;

if keycontrol == "WASD" {
    if movement == "0" {
        speed -= 0.6;
    }
    else
    {
        y += ms-dec;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keycontrol = global.controls;
movement = global.movement;

if keycontrol == "WASD" {
    if movement == "0" {
        x += lengthdir_x(1.5,image_angle+90);
        y += lengthdir_y(1.5,image_angle+90);
    }
    else
    {
        x+=ms-dec;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keycontrol = global.controls;
movement = global.movement;

if keycontrol == "WASD" {
    if movement == "0" {
        x += lengthdir_x(1.5,image_angle-90);
        y += lengthdir_y(1.5,image_angle-90);
    }
    else
    {
        x-=ms-dec;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keycontrol = global.controls;
movement = global.movement;

if keycontrol == "ARROW" {
    if movement == "0" {
        speed -= 0.6;
    }
    else
    {
        y += ms-dec;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keycontrol = global.controls;
movement = global.movement;

if keycontrol == "ARROW" {
    if movement == "0" {
        x += lengthdir_x(1.5,image_angle+90);
        y += lengthdir_y(1.5,image_angle+90);
    }
    else
    {
        x+=ms-dec;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keycontrol = global.controls;
movement = global.movement;

if keycontrol == "ARROW" {
    if movement == "0" {
        speed += 1;
    }
    else
    {
        y -= ms-dec;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keycontrol = global.controls;
movement = global.movement;

if keycontrol == "ARROW" {
    if movement == "0" {
        x += lengthdir_x(1.5,image_angle-90);
        y += lengthdir_y(1.5,image_angle-90);
    }
    else
    {
        x-=ms-dec;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if can_grenade=true
if grenade='frag'{
if frag_grenades&gt;0{
instance_create(x,y,frag_grenade_obj)
frag_grenades-=1
}
}

if (global.debug) {
    x = mouse_x;
    y = mouse_y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if try_optimise=true{

for (a=0;a&lt;bck_number;a+=1)
   {background_delete(background_tmp[a])}
   
} */
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=xprevious
y=yprevious</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y,1,1,direction,c_white,image_alpha)
if (flash == 1) {
    draw_set_color(c_white);
    draw_set_alpha(0.1);
    draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+640,view_yview[0]+480,false)
    draw_set_color(c_black);
    draw_set_alpha(1);
}
if laseron=true
if laser=true{
with(instance_create(x,y,objLaser_messenger)){ //Create a messenger to find where the laser must end.
        move_contact_solid(point_direction(x,y,mouse_x,mouse_y),600) //Make the messenger find where the laser "ends" (hitting walls, or larger than 800 pixels without walls)
        other.laser_x=x; //Call back its X coordinate to the ball
        other.laser_y=y; //Call back its Y coordinate to the ball
        instance_destroy(); //Destroy yourself
}
draw_set_alpha(0.5); //The laser is 50% transparent
draw_line_color(varshoot1X,varshoot1Y,laser_x,laser_y,c_red,c_red) //Draw the line from red to transparent (subtractive blend modes make black transparent)
draw_set_alpha(1) //Reset the alpha
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var curWeap = weapons[| weapons_index];

with curWeap { event_perform(ev_other, ev_user1); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="80">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.debug = !global.debug;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>LOTUS = global.lotus;
if lotus&gt;0{
    instance_create(x,y,lotus_antitank_mine_obj)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>file_name='screenshottime'+'|'+string(current_hour)+'|'+string(current_minute)+'|'+string(current_second)
screen_save(file_name+'.bmp')</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var weapIndex = check_carrying_weapon(obj_weap_plasmarifle);

if (weapIndex != -1) {
    weapons_index = weapIndex;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="52">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var weapIndex = check_carrying_weapon(obj_weap_plasmapistol);

if (weapIndex != -1) {
    weapons_index = weapIndex;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var weapIndex = check_carrying_weapon(obj_weap_brifle);

if (weapIndex != -1) {
    weapons_index = weapIndex;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var weapIndex = check_carrying_weapon(obj_weap_arifle);

if (weapIndex != -1) {
    weapons_index = weapIndex;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var weapIndex = check_carrying_weapon(obj_weap_pistol);

if (weapIndex != -1) {
    weapons_index = weapIndex;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weapons_index += 1;

if (weapons_index &gt;= ds_list_size(weapons)) {
    weapons_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1569325056</depth>
  <persistent>0</persistent>
  <parentName>obj_parent_activate</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global._radar=create_radar(400);
radar_object_add(global._radar,grunt_obj,0,c_red,2);
radar_object_add(global._radar,elite_obj,0,c_red,2);
radar_object_add(global._radar,hunter_obj,0,c_red,4);
radar_object_add(global._radar,marine_par,0,c_green,2);
radar_object_add(global._radar,obj_mc,0,c_green,2);
radar_object_add(global._radar,target_obj,0,c_red,2);
radar_object_add(global._radar,moving_target_obj,0,c_red,2);
radar_object_add(global._radar,jackal_obj,0,c_red,2);
global.advice=''
alarm[0]=random(5)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(arena_mode_control_par){
trythisthing=true
if trythisthing=true{
var border;
border=10
instance_deactivate_object(objParent_deac)
//Deactivate all instances that are possible to deactivate

instance_activate_region(view_xview[view_current]-border, view_yview[view_current]-border, view_xview[view_current]+view_wview[view_current]+border, view_yview[view_current]+view_hview[view_current]+border, true);

//Then activate all of them that are inside the view.
}
}

alarm[0]=random(5)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(hudfont)
depth=-10000
draw_sprite(bar_spr,-1,view_xview[view_current]+0,view_yview[view_current]+347)
depth=-9999

if obj_mc.overshield=true
shieldcolor=c_maroon
else
shieldcolor=c_blue

if obj_mc.overshield=true
draw_percentage_bar(view_xview+10,view_yview+457,100,10,obj_mc.shield,obj_mc.shield_max,shieldcolor,true,c_blue);

if obj_mc.overshield=false
draw_percentage_bar(view_xview+10,view_yview+457,100,10,obj_mc.shield,obj_mc.shield_max,shieldcolor,true,c_black);

draw_percentage_bar(view_xview+10,view_yview+457+6,100,4,obj_mc.alarm[3],obj_mc.camomaxtime,c_white,false,c_blue);

draw_percentage_bar(view_xview+116,view_yview+457,50,10,obj_mc.hp,obj_mc.hp_max,c_green,true,c_black);


//drawing current weapon ammo and status
var curWeap = obj_mc.weapons[| obj_mc.weapons_index];
var mag = curWeap.magazine_current;
var magMax = curWeap.magazine_maximum;
var ammo = curWeap.ammo_current;

if (curWeap.draw_ammo_as_bar) {
    draw_percentage_bar(view_xview+180,view_yview+457,50,10,mag,magMax,c_blue,true,c_black);
    if (curWeap.overheats) {
        var overheat = curWeap.overheat_level;
        draw_percentage_bar(view_xview+180,view_yview+465,50,5,overheat,1,c_white,false,c_black);
    }
} else {
    draw_text(view_xview+180,view_yview+455,'Ammo:' + string(mag) + '/' + string(ammo));
}


draw_radar(global._radar,obj_mc.x,obj_mc.y,view_xview+589,view_yview+480-134+84,45,c_black,-1)
draw_set_font(messagesfont)
if global.advice!=''
draw_text_color(view_xview+4,view_yview+100,global.advice,c_white,c_white,c_white,c_white,.8)

if (global.debug) {
        draw_text_color(view_xview+10,view_yview+10,'FPS:' + string(fps),c_white,c_white,c_white,c_white,1)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

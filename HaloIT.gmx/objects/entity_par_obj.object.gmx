<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp_max = -1;
hp_regen_rate = 0;
hp_regen_delay = 0;
hp = 0;

shield_max = -1;
shield_regen_rate = 0;
shield_regen_delay = 0;
shield = 0;

current_step = 0;
last_hp_step = 0;
last_shield_step = 0;

team = 0;
target = undefined;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (current_step == 0) {
    hp = hp_max;
    shield = shield_max;
}

current_step++;

if (current_step - last_hp_step &gt; hp_regen_delay) {
    hp += hp_regen_rate;
    if (hp &gt; hp_max) {
        hp = hp_max;
    }
}

if (current_step - last_shield_step &gt; shield_regen_delay) {
    shield += shield_regen_rate;
    if (shield &gt; shield_max) {
        shield = shield_max;
    }
}

if (hp_max != -1 &amp;&amp; hp &lt;= 0) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (proj_coll != undefined) {
    if (proj_coll[0] != noone) {
        if (shield &gt; 0) {
            shield -= proj_coll[0].damage_shields;
            effect_create_above(ef_spark, proj_coll[1], proj_coll[2], 0, c_orange);
            last_shield_step = current_step;
        } else if (hp &gt; 0) {
            hp -= proj_coll[0].damage_hp;
            effect_create_above(ef_spark, proj_coll[1], proj_coll[2], 0, c_red);
            last_shield_step = current_step;
            last_hp_step = current_step;
        }
        proj_coll[0].x = proj_coll[1];
        proj_coll[0].y = proj_coll[2];
        instance_destroy(proj_coll[0]);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.debug) {
    var healthString = "";
    if (shield != -1) {
        healthString += "(S" + string(shield) + ")";
    }
    
    if (hp != -1) {
        healthString += "(H" + string(hp) + ")";
    }
    
    if (string_length(healthString) &gt; 0) {

        draw_set_colour(c_white);
        draw_set_halign(fa_center);
        draw_set_valign(fa_middle);
    
        draw_text(x, y - 30, healthString);
        
        draw_set_colour(c_black);
        draw_set_halign(fa_left);
        draw_set_valign(fa_top);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>pillar_of_autumn_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp=100
atm=true
ntz=false
maxspeed=2
turnspeed=1
friction=0.01
//POD-A//
pod_a=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13,15);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13,15);
pod_ax = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_ay = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-B//
pod_b=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*1,15);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*1,15);
pod_bx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_by = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-C//
pod_c=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*2,15);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*2,15);
pod_cx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_cy = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-D//
pod_d=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*3,15);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*3,15);
pod_dx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_dy = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-E//
pod_e=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*4,15);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*4,15);
pod_ex = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_ey = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-F//
pod_f=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*5,15);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*5,15);
pod_fx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_fy = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-G//
pod_g=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*5,15);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*5,15);
pod_gx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_gy = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-H//
pod_h=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*6,15);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*6,15);
pod_hx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_hy = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-I//
pod_i=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*7,15);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*7,15);
pod_ix = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_iy = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-J//
pod_j=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*8,15);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*8,15);
pod_jx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_jy = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-K//
pod_k=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*9,15);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*9,15);
pod_kx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_ky = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-L//
pod_l=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*10,15);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*10,15);
pod_lx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_ly = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-M//
pod_m=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*11,15);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*11,15);
pod_mx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_my = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-N//
pod_n=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*0,68);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*0,68);
pod_nx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_ny = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-O//
pod_o=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*1,68);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*1,68);
pod_ox = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_oy = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-P//
pod_p=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*2,68);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*2,68);
pod_px = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_py = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-Q//
pod_q=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*3,68);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*3,68);
pod_qx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_qy = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-R//
pod_r=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*4,68);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*4,68);
pod_rx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_ry = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-S//
pod_s=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*5,68);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*5,68);
pod_sx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_sy = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-T//
pod_t=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*6,68);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*6,68);
pod_tx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_ty = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-U//
pod_u=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*7,68);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*7,68);
pod_ux = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_uy = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-V//
pod_v=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*8,68);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*8,68);
pod_vx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_vy = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-W//
pod_w=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*9,68);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*9,68);
pod_wx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_wy = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-X//
pod_x=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*10,68);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*10,68);
pod_xx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_xy = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-Y//
pod_y=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*11,68);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*11,68);
pod_yx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_yy = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
//POD-Z//
pod_z=30
varGunLength = point_distance(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*12,68);
varGunDirection = point_direction(sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index),13+4*12,68);
pod_zx = x + lengthdir_x(varGunLength,image_angle + varGunDirection);
pod_zy = y + lengthdir_y(varGunLength,image_angle + varGunDirection)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if pod='A'
if pod_a&gt;0{
pod_a-=1
instance_create(pod_ax,pod_ay,archer_missile)
alarm[1]=2}

if pod='B'
if pod_b&gt;0{
pod_b-=1
instance_create(pod_bx,pod_by,archer_missile)
alarm[1]=2}

if pod='C'
if pod_c&gt;0{
pod_c-=1
instance_create(pod_cx,pod_cy,archer_missile)
alarm[1]=2}

if pod='D'
if pod_d&gt;0{
pod_d-=1
instance_create(pod_dx,pod_dy,archer_missile)
alarm[1]=2}

if pod='E'
if pod_e&gt;0{
pod_e-=1
instance_create(pod_ex,pod_ey,archer_missile)
alarm[1]=2}

if pod='F'
if pod_f&gt;0{
pod_f-=1
instance_create(pod_fx,pod_fy,archer_missile)
alarm[1]=2}

if pod='G'
if pod_g&gt;0{
pod_g-=1
instance_create(pod_gx,pod_gy,archer_missile)
alarm[1]=2}

if pod='H'
if pod_h&gt;0{
pod_h-=1
instance_create(pod_hx,pod_hy,archer_missile)
alarm[1]=2}

if pod='I'
if pod_i&gt;0{
pod_i-=1
instance_create(pod_ix,pod_iy,archer_missile)
alarm[1]=2}

if pod='J'
if pod_j&gt;0{
pod_j-=1
instance_create(pod_jx,pod_jy,archer_missile)
alarm[1]=2}

if pod='K'
if pod_k&gt;0{
pod_k-=1
instance_create(pod_kx,pod_ky,archer_missile)
alarm[1]=2}

if pod='L'
if pod_l&gt;0{
pod_l-=1
instance_create(pod_lx,pod_ly,archer_missile)
alarm[1]=2}

if pod='M'
if pod_m&gt;0{
pod_m-=1
instance_create(pod_mx,pod_my,archer_missile)
alarm[1]=2}

if pod='N'
if pod_n&gt;0{
pod_n-=1
instance_create(pod_nx,pod_ny,archer_missile)
alarm[1]=2}

if pod='O'
if pod_o&gt;0{
pod_o-=1
instance_create(pod_ox,pod_oy,archer_missile)
alarm[1]=2}

if pod='P'
if pod_p&gt;0{
pod_p-=1
instance_create(pod_px,pod_py,archer_missile)
alarm[1]=2}

if pod='Q'
if pod_q&gt;0{
pod_q-=1
instance_create(pod_qx,pod_qy,archer_missile)
alarm[1]=2}

if pod='R'
if pod_r&gt;0{
pod_r-=1
instance_create(pod_rx,pod_ry,archer_missile)
alarm[1]=2}

if pod='S'
if pod_s&gt;0{
pod_s-=1
instance_create(pod_sx,pod_sy,archer_missile)
alarm[1]=2}

if pod='T'
if pod_t&gt;0{
pod_t-=1
instance_create(pod_tx,pod_ty,archer_missile)
alarm[1]=2}

if pod='U'
if pod_u&gt;0{
pod_u-=1
instance_create(pod_ux,pod_uy,archer_missile)
alarm[1]=2}

if pod='V'
if pod_v&gt;0{
pod_v-=1
instance_create(pod_vx,pod_vy,archer_missile)
alarm[1]=2}

if pod='W'
if pod_w&gt;0{
pod_w-=1
instance_create(pod_wx,pod_wy,archer_missile)
alarm[1]=2}

if pod='X'
if pod_x&gt;0{
pod_x-=1
instance_create(pod_xx,pod_xy,archer_missile)
alarm[1]=2}

if pod='Y'
if pod_y&gt;0{
pod_y-=1
instance_create(pod_yx,pod_yy,archer_missile)
alarm[1]=2}

if pod='Z'
if pod_z&gt;0{
pod_z-=1
instance_create(pod_zx,pod_zy,archer_missile)
alarm[1]=2}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>missile_pods</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if speed&gt;maxspeed
speed=maxspeed

if speed&lt;-2
speed=-2

image_angle=direction</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed-=.2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction-=turnspeed</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed+=.4</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction+=turnspeed</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if atm=true{
atm=false
ntz=true}
else
if ntz=true{
ntz=false
atm=true}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pod=get_string('Please Enter Archer Pod Letter:','A')</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if pod='A'
if pod_a&gt;0{
pod_a-=1
instance_create(pod_ax,pod_ay,archer_missile)
alarm[1]=2}

if pod='B'
if pod_b&gt;0{
pod_b-=1
instance_create(pod_bx,pod_by,archer_missile)
alarm[1]=2}

if pod='C'
if pod_c&gt;0{
pod_c-=1
instance_create(pod_cx,pod_cy,archer_missile)
alarm[1]=2}

if pod='D'
if pod_d&gt;0{
pod_d-=1
instance_create(pod_dx,pod_dy,archer_missile)
alarm[1]=2}

if pod='E'
if pod_e&gt;0{
pod_e-=1
instance_create(pod_ex,pod_ey,archer_missile)
alarm[1]=2}

if pod='F'
if pod_f&gt;0{
pod_f-=1
instance_create(pod_fx,pod_fy,archer_missile)
alarm[1]=2}

if pod='G'
if pod_g&gt;0{
pod_g-=1
instance_create(pod_gx,pod_gy,archer_missile)
alarm[1]=2}

if pod='H'
if pod_h&gt;0{
pod_h-=1
instance_create(pod_hx,pod_hy,archer_missile)
alarm[1]=2}

if pod='I'
if pod_j&gt;0{
pod_j-=1
instance_create(pod_jx,pod_jy,archer_missile)
alarm[1]=2}

if pod='K'
if pod_k&gt;0{
pod_k-=1
instance_create(pod_kx,pod_ky,archer_missile)
alarm[1]=2}

if pod='L'
if pod_l&gt;0{
pod_l-=1
instance_create(pod_lx,pod_ly,archer_missile)
alarm[1]=2}

if pod='M'
if pod_m&gt;0{
pod_m-=1
instance_create(pod_mx,pod_my,archer_missile)
alarm[1]=2}

if pod='N'
if pod_n&gt;0{
pod_n-=1
instance_create(pod_nx,pod_ny,archer_missile)
alarm[1]=2}

if pod='O'
if pod_o&gt;0{
pod_o-=1
instance_create(pod_ox,pod_oy,archer_missile)
alarm[1]=2}

if pod='P'
if pod_p&gt;0{
pod_p-=1
instance_create(pod_px,pod_py,archer_missile)
alarm[1]=2}

if pod='Q'
if pod_q&gt;0{
pod_q-=1
instance_create(pod_qx,pod_qy,archer_missile)
alarm[1]=2}

if pod='R'
if pod_r&gt;0{
pod_r-=1
instance_create(pod_rx,pod_ry,archer_missile)
alarm[1]=2}

if pod='S'
if pod_s&gt;0{
pod_s-=1
instance_create(pod_sx,pod_sy,archer_missile)
alarm[1]=2}

if pod='T'
if pod_t&gt;0{
pod_t-=1
instance_create(pod_tx,pod_ty,archer_missile)
alarm[1]=2}

if pod='U'
if pod_u&gt;0{
pod_u-=1
instance_create(pod_ux,pod_uy,archer_missile)
alarm[1]=2}

if pod='V'
if pod_v&gt;0{
pod_v-=1
instance_create(pod_vx,pod_vy,archer_missile)
alarm[1]=2}

if pod='W'
if pod_w&gt;0{
pod_w-=1
instance_create(pod_wx,pod_wy,archer_missile)
alarm[1]=2}

if pod='X'
if pod_x&gt;0{
pod_x-=1
instance_create(pod_xx,pod_xy,archer_missile)
alarm[1]=2}

if pod='Y'
if pod_y&gt;0{
pod_y-=1
instance_create(pod_yx,pod_yy,archer_missile)
alarm[1]=2}

if pod='Z'
if pod_z&gt;0{
pod_z-=1
instance_create(pod_zx,pod_zy,archer_missile)
alarm[1]=2}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
